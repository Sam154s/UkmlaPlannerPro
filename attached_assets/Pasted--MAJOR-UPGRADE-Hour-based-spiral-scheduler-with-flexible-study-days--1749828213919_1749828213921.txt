# ðŸ›   MAJOR UPGRADE Â· Hour-based spiral scheduler with flexible study days

â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
CONTEXT (current code)
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
â€¢ Selector builds a SessionStub list by *counting* 2-hour sessions per subject.
â€¢ Timeslotter packs fixed 2-h blocks into preset weekday masks.
We must switch to **hour budgets** and **user-chosen study-day list**, plus variable 30-min granularity.

â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
NEW SPEC TO IMPLEMENT
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
1. **Subject hour budget**
   * Table supplied â†’ blocks Ã— 2.5 h = baseline hours for a 5th-year.
   * Multiply by `yearMultiplier` (1st-year â‰ˆ 1.8, 2nd 1.6 â€¦ 5th 1.0).
   * Store in `subjectHoursMap`.

2. **Condition weight & hours**
   * `raw = 0.4D + 0.3C + 0.3E`
   * `adj = raw Ã— (1 + (1 âˆ’ mastery)/2)`  (mastery default 0.7)
   * Hours for condition = `subjectHours Ã— adj / Î£adj`.

3. **Session slicer**
   * Break or group conditions into sessions sized **30-min multiples**, min 1 h, max 2 h.
   * Greedy pack: add next condition until session â‰¥1 h and â‰¤2 h; if adding would exceed, start new session.

4. **Favourite boost only**
   * Remove least-favourite logic entirely.
   * In review weight use `favMultiplier = 1.5` if subject in favourites else 1.

5. **Spiral review unchanged** except: `difficultyFactor` recalculated from latest mastery each time the timetable is regenerated.

6. **User-chosen study days**
   * `studyDays: number[]` (array of weekday indices 0-6) replaces daysPerWeek mask.
   * Timeslotter only schedules on these exact days.

7. **Weekly workload**
   * User supplies `hoursPerWeek`.
   * Daily cap = `hoursPerWeek / studyDays.length`.
   * Place sessions (30-min grid, DAILY_START_TIMEâ†’DAILY_END_TIME) until daily cap reached.

8. **Regeneration trigger**
   * Expose `rebuildTimetable(userConfig)` that calls selector + timeslotter; UI triggers it after every mastery update.

â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
CODE CHANGES
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
**A. types/spiral.ts**
```ts
export interface SpiralConfig {
  weeklyStudyHours: number;  // now legacy (convert)
  hoursPerWeek: number;
  studyDays: number[];       // e.g. [1,3,5]
  yearMultiplier: number;    // 1.0 for 5th-year
  favouriteSubjects: string[];
  subjectsData: import('../data/masterSubjects').SubjectsData;
  userPerformance?: UserPerformance;
  blocksTable: Record<string, number>;
  yearGroup?: number;        // keep for back-compat
}
B. algorithms/selector.ts â†’ REPLACE with hour-driven generator

New function buildHourPlan(config) â†’ ConditionPlan[] where each item {subject, condition, minutes}.

Compute subjectHoursMap, weights, hours as per spec.

Spiral review operates on minutes: track gap in sessions, not minutes.

C. algorithms/sessionSlicer.ts (NEW)

sliceConditions(plan, min=30, max=120) â†’ SessionStub[].

D. algorithms/timeslotter.ts

Accept studyDays:number[] instead of daysPerWeek.

maxMinutesPerDay = (hoursPerWeek / studyDays.length) Ã— 60.

Place variable-length sessions using helper.

E. constants.ts

Keep DAILY_START_TIME / DAILY_END_TIME.

F. api/spiral.ts

ts
Copy
Edit
export { rebuildTimetable } from '../algorithms'; // new entry
G. Remove least-favourite logic from all files.

â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
TESTS (vitest)
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

quotaHours.test.ts â€“ subject total minutes â‰ˆ blocksÃ—150Ã—yearMultiplier.

favBias.test.ts â€“ favourite subject gets â‰¥1.4Ã— review insertions.

dayConstraint.test.ts â€“ sessions only on supplied studyDays.

â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
DELIVERABLES
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

Updated types, new selector, new slicer, modified timeslotter.

Migrations compile under npm run type.

All tests green, lint clean.

â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
AFTER APPLY
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

bash
Copy
Edit
npm install
npm run type
npm run lint
npm run test
Stop when all pass.